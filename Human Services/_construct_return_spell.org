#+TITLE: Find the earlist return spell of an ending spell
#+SUBTITLE: Using SQL for doing Data Analysis
#+AUTHOR: Ruisha
#+EMAIL: ruishaz@gmail.com
#+STARTUP: showeverything
#+STARTUP: nohideblocks


* Find the earlist return spell of an ending spell 

* The data set

The data set is head of household spells (idhs.hh_indcase_spells). 
Head of household spell table is organized by recipent id (primary key).
There are spell type, spell starting & ending date, and some demographic about the spell receipent.  

** Intermidiate data set
- Goal: Find out whether there is a return spell or not given each ending spell for validation part of the project

We would be using the functions  =group by= AND  =order by= to find the earlist return spell

#+BEGIN_SRC sql

DROP TABLE IF EXISTS c6.return_hh_indcase_spells ;
CREATE TABLE c6.return_hh_indcase_spells AS
SELECT sub.recptno,sub.oldSpell_end,sub.oldBene_type,
min(sub.ch_dpa_caseid) AS ch_dpa_caseid,avg(sub.member_age) AS member_age, min(sub.newSpell_start) as next_spell_start_date, min(sub.returnSpell_gap) as gap,
CASE
 WHEN min(sub.returnSpell_gap) <1000000 THEN 1
 ELSE 0
 END AS "return_index",
CASE When count(*)=1 AND min(sub.returnSpell_gap)=1000000 THEN 0
ELSE count(*)
END AS "total_future_spell"
FROM
	(SELECT a.recptno, a.ch_dpa_caseid,a.benefit_type AS oldBene_type,
	a.end_date AS oldSpell_end, 
	AGE(a.end_date, a.birth_date )AS member_age,
	b.benefit_type AS newBene_type,
	b.start_date AS newSpell_start,
	CASE
		WHEN b.start_date IS NULL THEN 1000000
		ELSE ( b.start_date- a.end_date ) 
		END AS returnSpell_gap
	FROM c6.hh_indcase_spells_nogrant a
	LEFT JOIN c6.hh_indcase_spells_nogrant b
	ON (a.recptno=b.recptno) AND (a.end_date<b.start_date)
 	order by 1,3,4,6,7
	)sub
group by 1,2,3
order by 1,2,3;
#+END_SRC

*** Idea behind:

the inner select from : use all spells in idhs.hh_indcase_spells spell that exclude grant(c6.hh_indcase_spells_nogrant) 
and left join with itself to construct one ending spell with all possible future return spell
then calculate the gap between the ending spell and all future return spells (returnSpell_gap)
and rank the gap from the shortest the longest, if there is no future return spell, give a 1m value 
the outter select from : keep one ending spell a record with a  0/1 return_index, smallest gap days, and total number of future return spells.  

