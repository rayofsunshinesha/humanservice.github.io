#+TITLE: Identity spell that canceled due to earning
#+SUBTITLE: Using SQL for doing Data Analysis
#+AUTHOR: Ruisha
#+EMAIL: ruishaz@gmail.com
#+STARTUP: showeverything
#+STARTUP: nohideblocks

* Before we start

- Self-suffiency measurement that human service department is current using is called case canceled due to earning
- Data tables including snap case canceled due to earning, tanf case canceled due to earning, head of household spells.  
- Goal: generate intermediate tables for next step.

* The data set

snap/tanf canceled due to earning is organized by chapen hall id (primary key).
There are different types of dates for case cancel process. We choose transaction_date as the benchmark.

head of household spell table is organized by recipent id (primary key).
There are spell type, spell starting & ending date, and some demographic about the spell receipent.  

** Case canceled due to earning measure 

- This measure evaluates how well spell recipents are doing at the time of cancelation. 
- For example: If 5% of all cases that were canceled due to earning last quarter, 6% are canceled due to earning this quarter, self-sufficiency of spell recipent is increasing as the department believes.  

** Data tables: snap case canceled due to earning, tanf case canceled due to earning

- Case canceled due to earning are tagged in a table with chapen hall id and a date. 

** Data tables: head of household spells 
- Head of household spell information include caseid (primary key), chapen hall id, and spell start and end date.

** Intermidiate data set
- Goal: link case canceled due to earning with head of household table to tag the spell with a 0/1 case canceled due to earning column.

Link snap canceled with head of household spell using the functions  =partition by= 

#+BEGIN_SRC sql
--tag the specific spell that canceled due to earning for foodstamp
SQL:
DROP TABLE IF EXISTS c6.snap_cancelled_identify_hh_indcase_spells ;
CREATE TABLE c6.snap_cancelled_identify_hh_indcase_spells AS 
SELECT *, 1 as tag_cancel
FROM(
	SELECT cancel.ch_dpa_caseid, cancel.transaction_date,
	spell.recptno, spell.benefit_type, spell.end_date , 
	(cancel.transaction_date-spell.end_date) as days_between_end_cancel,
	FIRST_VALUE(spell.end_date) 
		OVER (PARTITION BY cancel.transaction_date 
		ORDER BY ABS(cancel.transaction_date-spell.end_date))
	FROM idhs.snap_cancelled_earnings_redacted cancel
	LEFT JOIN idhs.hh_indcase_spells spell
	ON cancel.ch_dpa_caseid=spell.ch_dpa_caseid
	WHERE (cancel.ch_dpa_caseid IS NOT NULL) AND 
	(spell.benefit_type LIKE '%foodstamp%')
) temp
WHERE ABS(days_between_end_cancel)<=60
ORDER BY ABS(days_between_end_cancel)
#+END_SRC

Link tanf canceled with head of household spell, same logic 

#+BEGIN_SRC sql
--tag the specific spell that canceled due to earning for tanf
DROP TABLE IF EXISTS c6.tanf_cancelled_identify_hh_indcase_spells ;
CREATE TABLE c6.tanf_cancelled_identify_hh_indcase_spells AS 
SELECT *, 1 as tag_cancel_tanf
FROM(
	SELECT cancel.ch_dpa_caseid, cancel.transaction_date,
	spell.recptno, spell.benefit_type, spell.end_date , 
	(cancel.transaction_date-spell.end_date) as days_between_end_cancel,
	FIRST_VALUE(spell.end_date) 
		OVER (PARTITION BY cancel.transaction_date 
		ORDER BY ABS(cancel.transaction_date-spell.end_date))
	FROM idhs.tanf_cancelled_earnings_redacted cancel
	LEFT JOIN idhs.hh_indcase_spells spell
	ON cancel.ch_dpa_caseid=spell.ch_dpa_caseid
	WHERE (cancel.ch_dpa_caseid IS NOT NULL) AND 
	(spell.benefit_type LIKE '%tanf%')
	order by cancel.ch_dpa_caseid,spell.end_date
) temp
WHERE ABS(days_between_end_cancel)<=60
ORDER BY ABS(days_between_end_cancel)
#+END_SRC

*** Idea behind:

use all cases in idhs.snap_cancelled_earnings_redacted (where ch_dpa_caseid is not missing )
go merge with idhs.hh_indcase_spells spell to identify the specicfic spell that is canceled due to earning. 
tag the record of the smallest gap days btw transaction_date & spell.end_date 
if the gap is more than 60 days, I make the judgement that the spell is not related to the transaction_date.
